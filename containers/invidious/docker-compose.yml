networks:
  vpn:
    external: true

services:
  invidious:
    container_name: invidious
    image: quay.io/invidious/invidious:latest
    restart: unless-stopped
    ports:
      - PORT1:3000
    environment:
      # Please read the following file for a comprehensive list of all available
      # configuration options and their associated syntax:
      # https://github.com/iv-org/invidious/blob/master/config/config.example.yml
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: invidious-db
          port: 5432
        check_tables: true
        # external_port:
        # domain:
        # https_only: false
        # statistics_enabled: false
        hmac_key: "RANDOMIZEDPASSWORD"
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
      disable: false #HEALTHCHECKHERE
    logging:
      options:
        max-size: "1G"
        max-file: "4"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro #SOCKETHERE
    #labels:
      #traefik.enable: true
      #traefik.http.routers.invidious.entrypoints: web,websecure
      #traefik.http.routers.invidious.rule: Host(`DOMAINSUBNAMEHERE`)
      #traefik.http.routers.invidious.tls: true
      #traefik.http.routers.invidious.tls.certresolver: production
      #traefik.http.routers.invidious.middlewares:
    depends_on:
      - invidious-db
    networks:
      vpn:
        ipv4_address: IPADDRESSHERE

  invidious-db:
    container_name: invidious-db
    image: docker.io/library/postgres:14
    restart: unless-stopped
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
    networks:
      vpn:
        ipv4_address: 10.8.1.121
